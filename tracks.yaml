tracks:
  - title: Preprocessing
    condition: phase is pre
    tracks:
    - title: VoiceOver test
      condition: filename is wrap_em.md
      script: wrap_em.sh
    - title: Test File
      condition: filename ends with test.md
      sequence:
        # - filter: insertCSS(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css)
        # - filter: insertScript(https://unpkg.com/mermaid@10/dist/mermaid.min.js)
        - filter: autoLink()
        - filter: insertTitle(yes)
        - filter: fixHeaders
        # - filter: insertScript(test.js)
        # - filter: prependFile(test_include.md)
        # - filter: insertTOC(3, h1)
        - filter: insertCSS(callouts)
        # - filter: insertTOC()
        - filter: setMeta(processor, gfm)
    - title: MindNode map
      condition: filename ends with mindnode
      filter: setStyle(ink)
    - title: Obsidian Markdown document
      condition: tree contains .obsidian AND (extension is md OR extension is markdown)
      sequence:
        - script: obsidian-md-filter
        - script: obsidian-callouts
        - filter: insertStylesheet(callouts)
    - title: GitHub README
      condition: filename is README.md
      filter: setStyle(github)
    - title: Bear Preview
      condition: "text contains <!-- source: Bear.app -->"
      sequence:
        - script: bear
    - title: Blog post or Bunch docs
      condition: (path contains _drafts OR path contains _posts OR path contains /bunch/) AND has yaml
      script: jekyll-pre
    - title: Help docs
      condition: path contains HelpDocs OR path contains Sites/dev/bunch OR path contains Code/nvultra-docs
      script: jekyll-pre
  - title: Processing
    condition: phase is pro
    tracks:
    # - title: Test File including linktest.md
    #   condition: includes contains file linktest.md
    #   command: echo NOCUSTOM
    - title: Test file
      condition: filename ends with test.md
      sequence:
        - filter: fixHeaders()
        - filter: removeMeta()
        # - command: cmark-gfm -e table -e footnotes -e strikethrough -e tasklist
        - command: kramdown
    - title: Obsidian Markdown document
      condition: tree contains .obsidian AND (extension is md OR extension is markdown)
      command: echo "MMD"
    - title: Confluence conversion
      condition: path contains Confluence
      command: markdown_py -x extra
    - title: TaskPaper file
      condition: ext is taskpaper OR text contains @taskpaper
      script: taskpaper
    - title: GitHub README
      condition: filename is README.md
      script: github-pro
    - title: Blog post
      condition: (path contains _drafts OR path contains _posts) AND has yaml
      script: jekyll-post
    - title: Bunch docs
      condition: extension is md AND path contains /bunch/ AND has yaml
      script: bunch-post
    - title: nvUltra or Marked docs
      condition: path contains HelpDocs OR path contains Code/nvultra-docs
      sequence:
        - command: echo MMD
